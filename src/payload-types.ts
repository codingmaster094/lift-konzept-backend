/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    posts: Post;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    menus: Menu;
    home: Home;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    menus: MenusSelect<false> | MenusSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  authors?: (string | User)[] | null;
  title: string;
  /**
   * Auto-generated from title if left blank
   */
  slug: string;
  publishedDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  authors?: T;
  title?: T;
  slug?: T;
  publishedDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  title?: string | null;
  slug?: string | null;
  Header_Logo?: (string | null) | Media;
  Mobile_Header_Logo?: (string | null) | Media;
  link?: {
    Kontakt_label?: string | null;
    url?: string | null;
    target?: ('_self' | '_blank') | null;
  };
  type?: ('none' | 'highImpact' | 'mediumImpact' | 'lowImpact') | null;
  media?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  title?: string | null;
  slug?: string | null;
  footerlogo?: (string | null) | Media;
  description?: string | null;
  social?:
    | {
        social_icon: string | Media;
        social_url: string;
        id?: string | null;
      }[]
    | null;
  kontakt?: {
    phone?: string | null;
    phone_url?: string | null;
    email?: string | null;
    email_url?: string | null;
    address?: string | null;
    address_url?: string | null;
  };
  navigation?:
    | {
        heading: string;
        menus?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  legalLinks?:
    | {
        label?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  copyright?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: string;
  menus?:
    | {
        link?: {
          label?: string | null;
          url?: string | null;
          target?: ('_self' | '_blank') | null;
        };
        submenus?:
          | {
              links?:
                | {
                    link?: {
                      label?: string | null;
                      url?: string | null;
                      target?: ('_self' | '_blank') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  title?: string | null;
  slug: string;
  hero?: {
    heroImage?: (string | null) | Media;
    Heading?: string | null;
    SubHeading?: string | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    hero_link?: {
      label?: string | null;
      url?: string | null;
      target?: ('_self' | '_blank') | null;
    };
    heroformsection_Heading?: string | null;
    heroformsection_items?:
      | {
          heroformsection_main_Image?: (string | null) | Media;
          heroformsection_main_link?: {
            label?: string | null;
            url?: string | null;
            target?: ('_self' | '_blank') | null;
          };
          id?: string | null;
        }[]
      | null;
    heroformsection_redirect_Image?: (string | null) | Media;
    heroformsection_redirect_link?: {
      label?: string | null;
      url?: string | null;
      target?: ('_self' | '_blank') | null;
    };
  };
  companyLogo?: {
    logos?:
      | {
          logoImage?: (string | null) | Media;
          url?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  Experience?: {
    experiance_image1?: (string | null) | Media;
    experiance_image2?: (string | null) | Media;
    Heading?: string | null;
    SubHeading?: string | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    experiance?:
      | {
          experianceImage?: (string | null) | Media;
          title?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  VideoSection?: {
    thumbnalImage?: (string | null) | Media;
    video?: (string | null) | Media;
    Heading?: string | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  publishedAt?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  Header_Logo?: T;
  Mobile_Header_Logo?: T;
  link?:
    | T
    | {
        Kontakt_label?: T;
        url?: T;
        target?: T;
      };
  type?: T;
  media?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  footerlogo?: T;
  description?: T;
  social?:
    | T
    | {
        social_icon?: T;
        social_url?: T;
        id?: T;
      };
  kontakt?:
    | T
    | {
        phone?: T;
        phone_url?: T;
        email?: T;
        email_url?: T;
        address?: T;
        address_url?: T;
      };
  navigation?:
    | T
    | {
        heading?: T;
        menus?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  legalLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus_select".
 */
export interface MenusSelect<T extends boolean = true> {
  menus?:
    | T
    | {
        link?:
          | T
          | {
              label?: T;
              url?: T;
              target?: T;
            };
        submenus?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          label?: T;
                          url?: T;
                          target?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?:
    | T
    | {
        heroImage?: T;
        Heading?: T;
        SubHeading?: T;
        richText?: T;
        hero_link?:
          | T
          | {
              label?: T;
              url?: T;
              target?: T;
            };
        heroformsection_Heading?: T;
        heroformsection_items?:
          | T
          | {
              heroformsection_main_Image?: T;
              heroformsection_main_link?:
                | T
                | {
                    label?: T;
                    url?: T;
                    target?: T;
                  };
              id?: T;
            };
        heroformsection_redirect_Image?: T;
        heroformsection_redirect_link?:
          | T
          | {
              label?: T;
              url?: T;
              target?: T;
            };
      };
  companyLogo?:
    | T
    | {
        logos?:
          | T
          | {
              logoImage?: T;
              url?: T;
              id?: T;
            };
      };
  Experience?:
    | T
    | {
        experiance_image1?: T;
        experiance_image2?: T;
        Heading?: T;
        SubHeading?: T;
        richText?: T;
        experiance?:
          | T
          | {
              experianceImage?: T;
              title?: T;
              id?: T;
            };
      };
  VideoSection?:
    | T
    | {
        thumbnalImage?: T;
        video?: T;
        Heading?: T;
        richText?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}